version: '3'
services:
  # MongoDB Service
  mongo:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

  # Node.js API Service
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: api
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      - mongo
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGO_URI=mongodb://mongo:27017/whatsapp-clone
      - JWT_SECRET=${JWT_SECRET}
      - CLIENT_URL=${CLIENT_URL}
      - APP_NAME=${APP_NAME}
      - APP_LOGO_PATH=${APP_LOGO_PATH}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_VERIFY_SERVICE_SID=${TWILIO_VERIFY_SERVICE_SID}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
    networks:
      - app-network

  # React Client Service
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: client
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - api
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo_data: